{% extends "base.html.twig" %}

{% block content %}
    <div id="myCarousel" class="carousel slide py-5 bg-dark mb-6" data-bs-ride="carousel">
        <div class="container">
            <h1 class="h3 fw-light text-light">Das Machine-Vision-Konferenzsystem</h1>
            <h2 class="h4 text-light">Intuitiv. Innovativ. Digital.</h2>
        </div>

    </div>
    <div class="container py-4">
        <div class="py-3"></div>
        <h3 class="fw-light mb-3 text-center">Was ist GameReact Core?</h3>
        <p class="lead text-center">
            GameReact ist eine Software zur intelligenten medialen Unterst체tzung von Vortr채gen, Referaten und Pr채sentationen, aber auch f체r innovative Game-Steuerung.
        </p>
        <div class="py-3"></div>
        <h3 class="fw-light mb-3 text-center">Was kann GameReact Core?</h3>
        <div class="row g-3">
            <div class="col-12 col-md-4">
                <div class="card">
                    <img src="{{ asset('img/audioplayer.png') }}" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Multimedia</h5>
                        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                        <p class="card-text">
                            <a href="#" class="btn btn-primary d-block btn-sm">mehr erfahren</a>
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-4">
                <div class="card">
                    <img src="{{ asset('img/diagramm.png') }}" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Messen & Auswerten</h5>
                        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                        <p class="card-text">
                            <a href="#" class="btn btn-primary d-block btn-sm">mehr erfahren</a>
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-4">
                <div class="card">
                    <img src="{{ asset('img/control.png') }}" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Steuern</h5>
                        <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
                        <p class="card-text">
                            <a href="#" class="btn btn-primary d-block btn-sm">mehr erfahren</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <div class="py-5"></div>
        <h3 class="fw-light mb-3">Wo wird GameReact Core eingesetzt?</h3>
        <div class="accordion accordion-flush" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Bildungswesen
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Theater, Konzerte und Events
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Gaming
                    </button>
                </h2>
                <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFour" aria-expanded="false" aria-controls="collapseThree">
                        Unternehmen
                    </button>
                </h2>
                <div id="collapseFour" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
        </div>

        <div class="py-5"></div>
        <h3 class="fw-light mb-3">Aktuelle Entwicklung</h3>

        <div class="row g-3">
            <div class="col-12 col-md-6">
                <div class="mb-1">Multimedia</div>
                <div class="progress" role="progressbar" aria-label="Example 4px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 4px">
                    <div class="progress-bar" style="width: 25%"></div>
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="mb-1">Interne Steuerung</div>
                <div class="progress" role="progressbar" aria-label="Example 4px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 4px">
                    <div class="progress-bar" style="width: 60%"></div>
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="mb-1">Arduino Control</div>
                <div class="progress" role="progressbar" aria-label="Example 4px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 4px">
                    <div class="progress-bar" style="width: 5%"></div>
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="mb-1">DMX-Steuerung</div>
                <div class="progress" role="progressbar" aria-label="Example 4px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 4px">
                    <div class="progress-bar" style="width: 20%"></div>
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="mb-1">FOH-Monitor</div>
                <div class="progress" role="progressbar" aria-label="Example 4px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 4px">
                    <div class="progress-bar" style="width: 10%"></div>
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="mb-1">Grafikbetrachter</div>
                <div class="progress" role="progressbar" aria-label="Example 4px high" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="height: 4px">
                    <div class="progress-bar" style="width: 30%"></div>
                </div>
            </div>
        </div>



    </div>
{% endblock %}